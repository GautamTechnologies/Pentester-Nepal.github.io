const m = new showdown.Converter({tables: true, tablesHeaderId: true});
const main_url = document.location.href.split('/').slice(0, -2).join('/');
const $_GET = variable => {
    var query = window.location.search.substring(1);
    var vars = query.split('&');
    for (var i = 0; i < vars.length; i++) {
        var pair = vars[i].split('=');
        if (decodeURIComponent(pair[0]) == variable) {
            return decodeURIComponent(pair[1]);
        }
    }
    console.error('Query variable %s not found', variable);
}
const render_markdown = from => {
  fetch( from ).then( r => { r.text().then( t => {
    let content_div = document.createElement('div');
    content_div.classList.add('content');
    console.log(m.makeHtml(m.makeHtml(t)));
    content_div.innerHTML = m.makeHtml(t);
    document.body.appendChild(content_div);
    document.body.appendChild(document.createElement('hr'));
  })})
}

path = $_GET('path'); from = $_GET('from');
$_full_path = `${main_url}/${from}/${path}`;
is_remote = $_GET('remote')

if ( is_remote ) {
  $_full_path += "/content.rmdl";
  fetch ( $_full_path ).then ( r => r.text().then( l => {
    l.split('\n').forEach( link => {
      if ( link ) {
        render_markdown(link);
      }
    });
  }));
} else {
  $_full_path += "/README.md";
  render_markdown($_full_path);
}

/*
stuffz.forEach( stuff => {
  let el = document.createElement('div'); el.classList.add('page');
  el.classList.add(stuff); document.body.appendChild(el);
  fetch(`/${stuff}.md`).then(
      r => {
          return r.text()
      }).then(
          d => {
              document.querySelector(`.${stuff}`).innerHTML = m.makeHtml(d);
          });
});

*/
